{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/postsReducer.js","components/user/User.jsx","redux/actions/postsAction.js","components/Post/Post.jsx","components/posts/Posts.jsx","components/UI/MySelect/MySelect.jsx","components/UI/Loader/Loader.jsx","components/users/Users.jsx","redux/actions/userAction.js","components/pageToggler/PageToggler.jsx","components/UI/MyInput/MyInput.jsx","components/Navbar/Navbar.jsx","App.js","redux/index.js","index.js"],"names":["GET_USERS","GET_TOTAL_PAGE","GET_CURRENT_PAGE","IS_LOADING","defaultState","users","currentPage","totalPages","isLoading","addCurrentPageToState","page","type","payload","setLoading","action","GET_POSTS","CLOSE_POSTS","posts","User","user","dispatch","useDispatch","className","name","email","address","city","phone","onClick","userId","id","a","axios","get","response","data","console","log","Post","post","title","body","Posts","xmlns","width","height","style","fill","viewBox","d","map","MySelect","options","defaultValue","value","onChange","e","target","disabled","option","Loader","Users","searchQuery","useSelector","state","useEffect","useState","selectedSort","setSelectedSort","limit","params","_limit","_page","pages","Math","ceil","parseFloat","headers","getUserFromJSON","sortedUsers","useMemo","sort","b","localeCompare","searchUser","filter","toLowerCase","includes","length","PageToggler","pageToggler","MyInput","props","placeholder","Navbar","setSearchQuery","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66377fda.chunk.js","sourcesContent":["export const GET_USERS = 'GET_USERS'\r\nexport const GET_TOTAL_PAGE = 'GET_TOTAL_PAGE'\r\nexport const GET_CURRENT_PAGE = 'GET_CURRENT_PAGE'\r\nexport const IS_LOADING = 'IS_LOADING'\r\n\r\nconst defaultState = {\r\n    users: [],\r\n    currentPage: 1,\r\n    totalPages: 0,\r\n    isLoading: false\r\n}\r\n\r\nexport default function userReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return {\r\n                ...state, users: action.payload\r\n            }\r\n        case GET_TOTAL_PAGE:\r\n            return {\r\n                ...state, totalPages: action.payload\r\n            }\r\n        case GET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.payload\r\n            }\r\n        case IS_LOADING:\r\n            return {\r\n                ...state, isLoading: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addUsersToState = (users) => ({\r\n    type: GET_USERS,\r\n    payload: users\r\n})\r\nexport const addTotalPagesToState = (pages) => ({\r\n    type: GET_TOTAL_PAGE,\r\n    payload: pages\r\n})\r\nexport const addCurrentPageToState = (page) => ({\r\n    type: GET_CURRENT_PAGE,\r\n    payload: page\r\n})\r\nexport const setLoading = (action) => ({\r\n    type: IS_LOADING,\r\n    payload: action\r\n})","export const GET_POSTS = 'GET_POSTS'\r\nexport const CLOSE_POSTS = 'CLOSE_POSTS'\r\n\r\nconst defaultState = {\r\n    posts: []\r\n}\r\n\r\nexport default function postsReducer (state = defaultState, action){\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state, posts: action.payload\r\n            }\r\n        case CLOSE_POSTS:\r\n            return {\r\n                ...state, posts: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostsToState = (posts) => ({\r\n    type: GET_POSTS,\r\n    payload: posts\r\n})\r\nexport const deletePostsFromState = () => ({\r\n    type: CLOSE_POSTS\r\n})","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getPostsFromJSON} from \"../../redux/actions/postsAction\";\r\nimport './User.scss'\r\n\r\nconst User = ({user}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={'cards-wrapper__card'}>\r\n            <div className=\"card-container\">\r\n                <div className=\"user-info\">\r\n                    <div className=\"user-info__username\">{user.name}</div>\r\n                    <div className=\"user-info__user-email\">{user.email}</div>\r\n                    <div className=\"user-info__user-number\">{user.address.city}</div>\r\n                    <div className=\"user-info__user-number\">{user.phone}</div>\r\n                </div>\r\n                <div className=\"user-button\" onClick={() => dispatch(getPostsFromJSON(user.id))}>\r\n                    Lorem ipsum\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import axios from \"axios\";\r\nimport {addPostsToState, deletePostsFromState} from \"../reducers/postsReducer\";\r\n\r\nexport const getPostsFromJSON = (userId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${userId}&_limit=5`)\r\n\r\n            dispatch(addPostsToState(response.data))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const closePostsBlock = () => {\r\n    return async dispatch => {\r\n        dispatch(deletePostsFromState())\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Post = ({post}) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <details>\r\n                <summary className=\"post__title\">{post.title}</summary>\r\n                <div className=\"post__descr\">{post.body}</div>\r\n            </details>\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport './Posts.scss'\r\nimport Post from \"../Post/Post\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {closePostsBlock} from \"../../redux/actions/postsAction\";\r\n\r\nconst Posts = ({posts}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className='posts-container'>\r\n            <div onClick={() => dispatch(closePostsBlock())}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" style={{'color': 'white', 'float': 'right', 'margin': '10px'}} fill=\"currentColor\"\r\n                     className=\"bi bi-x\" viewBox=\"0 0 16 16\">\r\n                    <path\r\n                        d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n                </svg>\r\n            </div>\r\n            <div className=\"posts-wrapper\">\r\n                {posts.map(post => {\r\n                    return <Post post={post} key={post.id} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\nimport './MySelect.scss'\r\n\r\nconst MySelect = ({options, defaultValue, value, onChange}) => {\r\n    return (\r\n        <select value={value}\r\n                onChange={e => onChange(e.target.value)}\r\n                className={'my-select'}\r\n        >\r\n            <option value=\"\" disabled>{defaultValue}</option>\r\n            {options.map(option => {\r\n                return <option key={option.value} value={option.value}>{option.name}</option>\r\n            })}\r\n        </select>\r\n\r\n    );\r\n};\r\nexport default MySelect;","import React from 'react';\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-heart\"><div></div></div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCurrentPage, getUserFromJSON} from \"../../redux/actions/userAction\";\r\nimport User from \"../user/User\";\r\nimport Posts from \"../posts/Posts\";\r\nimport MySelect from \"../UI/MySelect/MySelect\";\r\nimport './Users.scss'\r\nimport Loader from \"../UI/Loader/Loader\";\r\n\r\nconst Users = ({searchQuery}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoading = useSelector(state => state.users.isLoading)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrentPage(1))\r\n    }, [])\r\n\r\n    const currentPage = useSelector(state => state.users.currentPage)\r\n\r\n    const [selectedSort, setSelectedSort] = useState('')\r\n\r\n    const [limit, setLimit] = useState(4)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserFromJSON(currentPage, limit))\r\n    }, [currentPage])\r\n\r\n    const users = useSelector(state => state.users.users)\r\n    const posts = useSelector(state => state.posts.posts)\r\n\r\n    const sortUsers = (sort) => {\r\n        setSelectedSort(sort)\r\n    }\r\n\r\n    const sortedUsers = useMemo(() => {\r\n        if(users){\r\n            if(selectedSort) {\r\n                return [...users].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\r\n            }\r\n        }\r\n        return users\r\n    }, [selectedSort, users])\r\n\r\n    const searchUser = useMemo(() => {\r\n        if(users) {\r\n            return sortedUsers.filter(user => user.name.toLowerCase().includes(searchQuery.toLowerCase()))\r\n        }\r\n    }, [searchQuery, sortedUsers])\r\n\r\n    if(isLoading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <MySelect defaultValue={'Сортування'}\r\n                          options={[\r\n                              {value: 'name', name: 'По імені'}\r\n                          ]}\r\n                          value={selectedSort}\r\n                          onChange={sortUsers}/>\r\n            </div>\r\n            <div className={'cards-wrapper'}>\r\n                <div className=\"cards-wrapper-container\">\r\n                    {users\r\n                        ? searchUser.length\r\n                            ? searchUser.map(user => {\r\n                                return <User user={user} key={user.id} />})\r\n                            : <h4 className={'user-not-found'}>Такого користувача немає</h4>\r\n                        : <Loader />\r\n                    }\r\n                </div>\r\n\r\n                {posts.length !== 0 && <Posts posts={posts} />}\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;","import axios from \"axios\";\r\nimport {addCurrentPageToState, addTotalPagesToState, addUsersToState, setLoading} from \"../reducers/userReducer\";\r\n\r\nexport const getUserFromJSON = (page, limit) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true))\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/users', {\r\n                params: {\r\n                    _limit: limit,\r\n                    _page: page\r\n                }\r\n            })\r\n            dispatch(addTotalPagesToState(Math.ceil(parseFloat(response.headers['x-total-count']) / limit )))\r\n            dispatch(addUsersToState(response.data))\r\n            dispatch(setLoading(false))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const getCurrentPage = (page) => {\r\n        return async dispatch => {\r\n            dispatch(addCurrentPageToState(page))\r\n        }\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCurrentPageToState} from \"../../redux/reducers/userReducer\";\r\nimport './PageToggler.scss'\r\n\r\nconst PageToggler = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const currentPage = useSelector(state => state.users.currentPage)\r\n\r\n    const totalPages = useSelector(state => state.users.totalPages)\r\n    const pageToggler = (action) => {\r\n\r\n        if(currentPage > totalPages) {\r\n            dispatch(addCurrentPageToState(1))\r\n        } else if (currentPage >= totalPages) {\r\n            dispatch(addCurrentPageToState(totalPages))\r\n        }\r\n\r\n        switch (action){\r\n            case 'plus':\r\n                dispatch(addCurrentPageToState(currentPage + 1))\r\n                break\r\n            case 'minus':\r\n                dispatch(addCurrentPageToState(currentPage - 1))\r\n                break\r\n            default:\r\n                dispatch(addCurrentPageToState(1))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='page-togglers'>\r\n            {currentPage !== 1\r\n                ? <div className={'previous-page'} onClick={() => pageToggler('minus')}>Previous</div>\r\n                : null\r\n            }\r\n            {currentPage !== totalPages\r\n                ? <div className={'next-page'} style={{'marginLeft': 'auto'}} onClick={() => pageToggler('plus')}>Next</div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageToggler;","import React from 'react';\r\nimport './MyInput.scss'\r\n\r\nconst MyInput = (props) => {\r\n    return (\r\n        <input type={`${props.type}`} placeholder={`${props.placeholder}`} onChange={e => props.onChange(e.target.value)} value={props.value}/>\r\n    );\r\n};\r\n\r\nexport default MyInput;","import React from 'react';\r\nimport MyInput from \"../UI/MyInput/MyInput\";\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = ({searchQuery, setSearchQuery}) => {\r\n    return (\r\n        <div className={'navbar'}>\r\n            <div className=\"navbar__logo\">Lorem ipsum</div>\r\n            <div className=\"input\">\r\n                <MyInput placeholder={'Search'} type={'text'} value={searchQuery} onChange={setSearchQuery}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import './App.scss';\r\nimport Users from \"./components/users/Users\";\r\nimport PageToggler from \"./components/pageToggler/PageToggler\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {useState} from \"react\";\r\n\r\nfunction App() {\r\n\r\n    const [searchQuery, setSearchQuery] = useState('')\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Navbar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n            <Users searchQuery={searchQuery} />\r\n            <PageToggler/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport postsReducer from \"./reducers/postsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    users: userReducer,\r\n    posts: postsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}